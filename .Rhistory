library(dplyr)
library(plotly)
library(shiny)
setwd("~/INFO-201/food-world-cup/")
source("./scripts/wrangle-data.R")
food <- read.csv("data/food-world-cup-data.csv")
ratings <- wrangleData(food)
View(ratings)
View(food)
# THIS CODE DOESN'T WORK-- FIX LATER
ratings.summ <- ratings %>%
group_by(country) %>%
summarise(mean_rating = mean(rating, na.rm = TRUE))
warnings()
for (i in 1:n) {
if (tidy$rating[i] == "N/A") {
tidy$rating[i] <- 0
}
}
? len
? length
for (i in 1:length(tidy$rating)) {
if (tidy$rating[i] == "N/A") {
tidy$rating[i] <- 0
}
}
setwd("~/INFO-201/food-world-cup/")
source("./scripts/wrangle-data.R")
food <- read.csv("data/food-world-cup-data.csv")
ratings <- wrangleData(food)
View(ratings)
setwd("~/INFO-201/food-world-cup/")
source("./scripts/wrangle-data.R")
food <- read.csv("data/food-world-cup-data.csv")
ratings <- wrangleData(food)
? mean
# THIS CODE DOESN'T WORK-- FIX LATER
ratings.summ <- ratings %>%
group_by(country) %>%
summarise(mean_rating = mean(rating, na.rm = TRUE))
warnings()
View(food)
food[10,4]
ratings[10, 3]
ratings[10, 4]
is.na(ratings[10,4])
ratings[10,4] == ""
for (i in 1:length(food$Gender)) {
if (food$Gender[i] == "") {
food$Gender[i] <- NA
i <- i - 1
}
}
View(food)
setwd("~/INFO-201/food-world-cup/")
source("./scripts/wrangle-data.R")
food <- read.csv("data/food-world-cup-data.csv")
food$Gender[food$Gender == ""] <- NA
View(food)
food <- na.omit(food)
View(food)
ratings <- wrangleData(food)
View(ratings)
source("./scripts/wrangle-data.R")
ratings <- wrangleData(food)
View(ratings)
# THIS CODE DOESN'T WORK-- FIX LATER
ratings.summ <- ratings %>%
group_by(country) %>%
summarise(mean_rating = mean(rating, na.rm = TRUE))
warnings()
typeof(ratings[3,10])
? type.convert
setwd("~/INFO-201/food-world-cup/")
source("./scripts/wrangle-data.R")
food <- read.csv("data/food-world-cup-data.csv")
food$Gender[food$Gender == ""] <- NA
food <- na.omit(food)
ratings <- wrangleData(food)
View(ratings)
typeof(ratings[3,10])
ratings.summ <- ratings %>%
group_by(country) %>%
summarise(mean_rating = mean(rating, na.rm = TRUE))
View(ratings.summ)
? summarize
# Create summary table of average ratings
ratings.summ <- ratings %>%
group_by(country) %>%
summarise(mean_rating = mean(rating, na.rm = TRUE),
tot_ratings = n())
View(ratings.summ)
# Create summary table of average ratings
ratings.summ <- ratings %>%
group_by(country) %>%
summarise(mean_rating = mean(rating, na.rm = TRUE),
tot_ratings = n(rating))
View(ratings)
? mainPanel
? copy
??copy
food$Age[food$Age == ""] <- NA
food$Household.Income[food$Household.Income == ""] <- NA
food$Education[food$Education == ""] <- NA
ratings <- wrangleData(food)
source("./scripts/wrangle-data.R")
source("./scripts/wrangle-data.R")
ratings$Household.Income[1]
ratings$Age[1]
names(ratings)
shiny::runApp()
setwd("~/INFO-201/food-world-cup/")
source("./scripts/wrangle-data.R")
food <- read.csv("data/food-world-cup-data.csv")
food <- makePretty(food)
ratings <- read.csv("data/food-world-cup-combined-cols.csv")
# Create summary table of average ratings
ratings.summ <- ratings %>%
group_by(country, code, Gender, Age, Household.Income) %>%
summarise(mean_rating = mean(rating, na.rm = TRUE))
View(ratings)
df2 <- group_by(ratings.summ, country)
df2
View(df2)
runApp()
runApp()
runApp()
